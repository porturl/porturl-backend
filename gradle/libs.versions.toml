[versions]
# Plugin Versions
springBoot = "3.5.4"
springDependencyManagement = "1.1.7"
graalvmBuildtools = "0.11.0"
release = "3.1.0"
versionsPlugin = "0.52.0"

springdocOpenApi = "2.8.11"

# Dependency Versions
lombok = "1.18.38"
logbackAccess = "2.0.6"
logbackContrib = "0.1.5"
logstashEncoder = "8.1"
h2 = "2.3.232"

[libraries]
# Spring Boot Starters (Versions are managed by the Spring Boot BOM plugin)
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-data-rest = { module = "org.springframework.boot:spring-boot-starter-data-rest" }
spring-boot-starter-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }

springdoc-openapi-starter-webmvc-api = { module = "org.springdoc:springdoc-openapi-starter-webmvc-api", version.ref = "springdocOpenApi"}

# Testing
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }

# Micrometer & Tracing
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
micrometer-tracing-bridge-brave = { module = "io.micrometer:micrometer-tracing-bridge-brave" }

# Logging
logback-access-common = { module = "ch.qos.logback.access:logback-access-common", version.ref = "logbackAccess" }
logback-access-tomcat = { module = "ch.qos.logback.access:logback-access-tomcat", version.ref = "logbackAccess" }
logback-classic = { module = "ch.qos.logback:logback-classic" }
logback-contrib-json-classic = { module = "ch.qos.logback.contrib:logback-json-classic", version.ref = "logbackContrib" }
logback-contrib-jackson = { module = "ch.qos.logback.contrib:logback-jackson", version.ref = "logbackContrib" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
logstash-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstashEncoder" }

# Other
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
graalvm-native = { id = "org.graalvm.buildtools.native", version.ref = "graalvmBuildtools" }
researchgate-release = { id = "net.researchgate.release", version.ref = "release" }
benmanes-versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

# Bundles are a convenient way to group dependencies that are used together.
[bundles]
spring-starters = [
    "spring-boot-starter-actuator",
    "spring-boot-starter-data-jpa",
    "spring-boot-starter-data-rest",
    "spring-boot-starter-oauth2-resource-server",
    "spring-boot-starter-security",
]
logging = [
    "logback-access-common",
    "logback-access-tomcat",
    "logback-classic",
    "logback-contrib-json-classic",
    "logback-contrib-jackson",
    "jackson-databind",
    "logstash-encoder",
]